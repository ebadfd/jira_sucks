package home

import "github.com/ebadfd/jira_sucks/views/layouts"
import "github.com/andygrunwald/go-jira"
import "fmt"
import "strings"
import "github.com/ebadfd/jira_sucks/lib"

templ Profile(displayName, email, imageUrl string) {
	<div class="card avatar">
		<img src={ imageUrl } alt={ fmt.Sprintf("%s's Profile Image", displayName) } class="icon"/>
		<div>
			<p class="text name">{ displayName }</p>
			<p class="text email">{ email }</p>
		</div>
	</div>
}

templ Priority(name, iconUrl string) {
	<div class="card avatar priority">
		<img src={ iconUrl } alt={ fmt.Sprintf("%s", name) } class="icon"/>
		<div>
			<p class="text name">{ name }</p>
		</div>
	</div>
}

templ BugDescriptionField(fields jira.CustomFields) {
	if fields["customfield_10178"] != "" {
		<h3>Bug Description </h3>
		<div
			id="bug-description"
			bug-description-data={ templ.JSONString(
				string(lib.MarkdownToHtml(fields["customfield_10178"])),
			) }
		></div>
	}
}

templ DescriptionField(field string) {
	<h3>Description </h3>
	<div
		id="description"
		description-data={ templ.JSONString(
				string(lib.MarkdownToHtml(field)),
			) }
	></div>
}

templ Transitions(result *jira.Issue, transitions []jira.Transition) {
	<div id="transitions-better-select">
		<better-select>
			<select
				name="transitionId"
				id="transitions"
				value={ result.Fields.Status.ID }
				hx-post={ fmt.Sprintf("/app/%s/issues/%s/transitions", result.Fields.Project.Key, result.Key) }
				hx-trigger="change"
				hx-swap="outerHTML"
				hx-target="#transitions-better-select"
			>
				<option value={ result.Fields.Status.ID }>
					<span>{ result.Fields.Status.Name } </span>
				</option>
				for _, item := range transitions {
					<option value={ item.ID }>
						<span>{ item.Name } </span>
					</option>
				}
			</select>
		</better-select>
		<img
			src={ result.Fields.Status.IconURL }
			alt="Status Icon"
			style="width: 16px; height: 16px; margin-right: 5px; vertical-align: middle;"
		/>
	</div>
}

templ Issue(result *jira.Issue, fields jira.CustomFields, transitions []jira.Transition) {
	@layouts.Base() {
		<nav aria-label="Breadcrumb" class="breadcrumb" style="margin-bottom: 20px;">
			<ul>
				<li>
					<a href={ templ.SafeURL("/app") }>Projects</a>
				</li>
				<li>
					<a href={ templ.SafeURL(fmt.Sprintf("/app/%s", result.Fields.Project.Key)) }>{ result.Fields.Project.Key }</a>
				</li>
				<li>
					<div>
						<img
							src={ result.Fields.Type.IconURL }
							alt="Status Icon"
							style="width: 16px; height: 16px;vertical-align: middle;"
						/>
						<a href={ templ.SafeURL(fmt.Sprintf("/app/%s/issues/%s", result.Fields.Project.Key, result.Key)) }>{ result.Key }</a>
					</div>
				</li>
			</ul>
		</nav>
		<div class="grid">
			<div class="cell -8of12">
				<div class="content">
					<h2 class="issue-summary">{ strings.TrimSpace(result.Fields.Summary) } </h2>
					<br/>
					@DescriptionField(result.Fields.Description)
					<br/>
					@BugDescriptionField(fields)
					<br/>
					if len(result.Fields.IssueLinks) > 0 {
						<h3>Linked issues</h3>
						<ul>
							for _, item := range result.Fields.IssueLinks {
								if item.InwardIssue != nil {
									<li>
										<strong>{ item.Type.Inward }</strong>
										<a href={ templ.SafeURL(fmt.Sprintf("/app/%s/issues/%s", result.Fields.Project.Key, item.InwardIssue.Key)) }>{ item.InwardIssue.Fields.Summary }</a>
									</li>
								}
								if item.OutwardIssue != nil {
									<li>
										<strong>{ item.Type.Outward }</strong>
										<a href={ templ.SafeURL(fmt.Sprintf("/app/%s/issues/%s", result.Fields.Project.Key, item.OutwardIssue.Key)) }>{ item.OutwardIssue.Fields.Summary }</a>
									</li>
								}
							}
						</ul>
					}
				</div>
			</div>
			<div class="cell -4of12">
				<div style="margin-bottom: 15px;">
					@Transitions(result, transitions)
				</div>
				<div class="card" id="details">
					<header class="card-header" style="text-align: left;margin-left: 10px;margin-right: 10px;">Details</header>
					<div class="card-content">
						<div class="grid">
							<div class="cell -4of12">
								<div class="content">
									<p style="margin: 20px;">Reporter </p>
								</div>
							</div>
							<div class="cell -8of12">
								<div class="content">
									if result.Fields.Creator != nil {
										@Profile(result.Fields.Creator.DisplayName, result.Fields.Creator.EmailAddress, result.Fields.Creator.AvatarUrls.Four8X48)
									}
								</div>
							</div>
							<div class="cell -4of12">
								<div class="content">
									<p style="margin: 20px;">Assignee</p>
								</div>
							</div>
							<div class="cell -8of12">
								<div class="content">
									if result.Fields.Assignee != nil {
										@Profile(result.Fields.Assignee.DisplayName, result.Fields.Assignee.EmailAddress, result.Fields.Assignee.AvatarUrls.Four8X48)
									}
								</div>
							</div>
							<div class="cell -4of12">
								<div class="content">
									<p style="margin: 20px;">Priority</p>
								</div>
							</div>
							<div class="cell -8of12">
								<div class="content" style="align-items: center;display: flex;height: 100%;">
									@Priority(result.Fields.Priority.Name, result.Fields.Priority.IconURL)
								</div>
							</div>
							if len(result.Fields.Labels) > 0 {
								<div class="cell -4of12">
									<div class="content">
										<p style="margin: 20px;">Labels</p>
									</div>
								</div>
								<div class="cell -8of12">
									<div class="content" style="align-items: center;display: flex;height: 100%;">
										for _, item := range result.Fields.Labels {
											<a href={ templ.SafeURL(fmt.Sprintf("/app/%s?jql=project = \"%s\"  AND labels = \"%s\"", result.Fields.Project.Key, result.Fields.Project.Key, item)) }>{ item }</a>&nbsp;
										}
									</div>
								</div>
							}
							if len(result.Fields.FixVersions) > 0 {
								<div class="cell -4of12">
									<div class="content">
										<p style="margin: 20px;">Fix versions</p>
									</div>
								</div>
								<div class="cell -8of12">
									<div class="content" style="align-items: center;display: flex;height: 100%;">
										for _, item := range result.Fields.FixVersions {
											<a href={ templ.SafeURL(fmt.Sprintf("/app/%s/releases/%s", result.Fields.Project.Key, item.ID)) }>{ item.Name }</a> &nbsp;
										}
									</div>
								</div>
							}
						</div>
					</div>
				</div>
			</div>
		</div>
		<script>
			const bugDescription = document.getElementById('bug-description');
			const description = document.getElementById('description');

			const bugData = JSON.parse(bugDescription.getAttribute('bug-description-data'));
			const descData = JSON.parse(description.getAttribute('description-data'));

			const cleanBugData = DOMPurify.sanitize(bugData);
			const cleanDescData = DOMPurify.sanitize(descData);

			bugDescription.innerHTML = cleanBugData;
			description.innerHTML = cleanDescData;
		</script>
	}
}
